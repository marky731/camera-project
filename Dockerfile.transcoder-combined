# ============================================================================
# Stage 1: Build Transcoder (C binary)
# ============================================================================
FROM nvidia/cuda:12.8.0-devel-ubuntu24.04 AS transcoder-builder

RUN apt-get update && apt-get install -y \
    ffmpeg libavformat-dev libavcodec-dev libavutil-dev \
    libavfilter-dev libswresample-dev libmicrohttpd-dev \
    libcurl4-openssl-dev libcjson-dev build-essential \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app
COPY ./transcoder.c ./Makefile ./
RUN make clean && make

# ============================================================================
# Stage 2: Build TranscoderBridge (.NET)
# ============================================================================
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS bridge-builder

WORKDIR /src
COPY camera-v2/TranscoderBridge/TranscoderBridge.csproj ./
RUN dotnet restore "TranscoderBridge.csproj"

COPY camera-v2/TranscoderBridge/ ./
RUN dotnet publish "TranscoderBridge.csproj" \
    -c Release \
    -o /app/publish \
    /p:UseAppHost=false

# ============================================================================
# Stage 3: Runtime - Combine both
# ============================================================================
FROM nvidia/cuda:12.8.0-runtime-ubuntu24.04

# Install .NET 8 Runtime and dependencies
RUN apt-get update && apt-get install -y \
    wget \
    ca-certificates \
    && wget https://packages.microsoft.com/config/ubuntu/24.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb \
    && dpkg -i packages-microsoft-prod.deb \
    && rm packages-microsoft-prod.deb \
    && apt-get update \
    && apt-get install -y \
        aspnetcore-runtime-8.0 \
        ffmpeg \
        libmicrohttpd12 \
        libcurl4 \
        libcjson1 \
        supervisor \
        curl \
    && rm -rf /var/lib/apt/lists/*

# Create directory structure
WORKDIR /workspace
RUN mkdir -p tsfiles output /app/bridge

# Copy transcoder binary from builder stage
COPY --from=transcoder-builder /app/transcoder /app/transcoder
RUN chmod +x /app/transcoder

# Copy TranscoderBridge DLL from builder stage
COPY --from=bridge-builder /app/publish /app/bridge/

# Copy supervisord configuration
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Expose ports
EXPOSE 8080 8081

# Health check for both services
HEALTHCHECK --interval=10s --timeout=5s --retries=3 \
    CMD curl -f http://localhost:8080/health && \
        curl -f http://localhost:8081/health || exit 1

# Start supervisord (manages both processes)
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
