events {
    worker_connections 1024;
}

http {
    upstream panel_frontend {
        server panel-frontend:80;
    }

    upstream panel_api {
        server panel-api:8080;
    }

    upstream streaming_service {
        server streaming-service:8080;
    }

    upstream player_frontend {
        server player-frontend:3001;
    }

    upstream player_api {
        server player-api:8080;
    }

    upstream playlist_manager {
        server playlist-manager:8082;
    }

    server {
        listen 443 ssl;
        server_name cam.narbulut.com;

        # SSL configuration - using actual certificate file names
        ssl_certificate /etc/nginx/ssl/public.cer;
        ssl_certificate_key /etc/nginx/ssl/private.key;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Main Panel Frontend (Management UI)
        location / {
            proxy_pass http://panel_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for React hot reload (if needed)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Panel API (proxied so external browsers can reach it)
        location /api/ {
            # Handle OPTIONS requests directly in nginx for CORS preflight
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '$http_origin' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 86400 always;
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                return 204;
            }
            
            proxy_pass http://panel_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add CORS headers to responses
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Streaming Service API
        location /stream/ {
            proxy_pass http://streaming_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Player Frontend (iframe embedded in Panel) - proxy everything under /player/
        location /player/ {
            # Keep the /player/ prefix when forwarding to backend (Vite expects it)
            proxy_pass http://player_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Vite dev server
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        

        # Player API endpoints - rewrite to add /api prefix
        location /player-api/ {
            # Rewrite /player-api/xxx to /api/xxx for the backend
            rewrite ^/player-api/(.*)$ /api/$1 break;
            proxy_pass http://player_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Playlist Manager API endpoints - proxy directly to playlist manager
        location /playlist/ {
            # Forward /playlist/xxx directly to playlist manager (it already has /api/playlist in the URL)
            proxy_pass http://playlist_manager/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Direct API playlist routes for segment access (when manifest uses relative URLs)
        location /api/playlist/ {
            # Forward directly to playlist manager's API endpoint
            proxy_pass http://playlist_manager/api/playlist/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name cam.narbulut.com;
        return 301 https://$server_name$request_uri;
    }
}